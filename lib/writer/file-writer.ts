import fs from 'fs';
import logger from '../logger';

const typesBase = `
type Nullable<T> = T | null;
`;

export function writeTypesToFile(types: string[], outputPath: string): void {
  // Make output directory if it doesn't exist
  const outputDir = outputPath.split('/').slice(0, -1).join('/');
  fs.mkdirSync(outputDir, { recursive: true });

  let toWrite = `// This file was generated by the openapi-to-typescript tool.\n`;
  toWrite += `// Do not modify it by hand.\n\n`;

  // Find the index where the comments end and types base starts.
  let i = 0;
  for (; i < typesBase.length; i++) {
    const lineContents = typesBase[i].trim();
    if (!lineContents.startsWith('//') && lineContents !== '') {
      break;
    }
  }

  toWrite += '// START TYPES BASE\n';
  toWrite += typesBase;
  toWrite += '// END TYPES BASE\n\n';

  // Append the types to the output file
  toWrite += types.join('\n');
  fs.writeFileSync(outputPath, toWrite);
  logger.info(`wrote types to ${outputPath}`);
}
